{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/home/side-bar-user-details/side-bar-user-details.component.ts","./src/app/home/side-bar-user-details/side-bar-user-details.component.html","./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/token-interceptor.service.ts","./src/environments/environment.ts","./src/app/add-image/add-image.component.ts","./src/app/add-image/add-image.component.html","./src/app/auth-service.service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, RoutesRecognized } from '@angular/router';\r\nimport { AuthServiceService } from '../auth-service.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerFormGroup: FormGroup;\r\n  errorMsg: string = \"null\";\r\n  constructor(private formBuilder:FormBuilder,private authService:AuthServiceService, private routerService:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  registerProcess(){\r\n    if(this.registerFormGroup.valid){\r\n      \r\n      const formBody = this.registerFormGroup.value;\r\n      const formData = new FormData();\r\n\r\n      formData.append(\"userName\",formBody.userName);\r\n      formData.append(\"password\",formBody.password);\r\n      formData.append(\"dateOfBirth\",formBody.dateOfBirth.toLocaleDateString());\r\n      formData.append(\"firstName\",formBody.firstName);\r\n      formData.append(\"lastName\",formBody.lastName);\r\n      formData.append(\"gender\",formBody.gender);\r\n      formData.append(\"profilePic\",formBody.profilePic);\r\n      this.authService.register(formData).subscribe(result =>{\r\n        if(result.token){\r\n          console.log(result);\r\n          this.errorMsg = 'null';\r\n          localStorage.setItem('token', result.token);\r\n          this.routerService.navigate(['home']);\r\n        }\r\n      },\r\n      error =>{\r\n        this.errorMsg = \"Registration Failed\";\r\n      });\r\n    }\r\n  }\r\n\r\n  onFileSelect(event : Event){\r\n    const target = event.target as HTMLInputElement;\r\n    const files = target.files as FileList;\r\n    if(files.length > 0)\r\n      this.registerFormGroup.get('profilePic')?.setValue(files[0])\r\n    else{\r\n      this.errorMsg = \"Invalid file selected\"\r\n    }\r\n  }\r\n\r\n  initForm(){\r\n    this.registerFormGroup = new FormGroup({\r\n      userName: new FormControl('',[Validators.required]),\r\n      password: new FormControl('',[Validators.required]),\r\n      confirmpassword: new FormControl('',[Validators.required]),\r\n      firstName: new FormControl('',[Validators.required]),\r\n      lastName: new FormControl(null),\r\n      gender: new FormControl('',[Validators.required]),\r\n      dateOfBirth: new FormControl('', [Validators.required]),\r\n      profilePic: new FormControl(null)\r\n    });\r\n  }\r\n}\r\n","<div fxLayoutAlign=\"center center\" fxFlexFill class=\"div-toolbar\">\n    <mat-card fxFlex=\"50\">\n        <mat-toolbar  color=\"primary\">\n            <span>Register</span>\n          </mat-toolbar>\n        <form fxLayoutAlign=\"stretch\" fxLayout=\"column\" class=\"login-form\" [formGroup]=\"registerFormGroup\" (ngSubmit)=\"registerProcess()\">\n\n          <label class=\"form-label\" for=\"customFile\">Profile Picture</label>\n          <input type=\"file\" class=\"form-control\" id=\"customFile\" (change)=\"onFileSelect($event)\"/>\n\n            <mat-form-field>\n              <mat-label>Username</mat-label>\n              <input matInput placeholder=\"Username\" formControlName=\"userName\">\n            </mat-form-field>\n          \n            <mat-form-field>\n                <mat-label>Password</mat-label>\n                <input matInput type=\"text\" placeholder=\"Password\" formControlName=\"password\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Confirm Password</mat-label>\n                <input matInput type=\"password\" placeholder=\"Confirm Password\" formControlName=\"confirmpassword\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>First Name</mat-label>\n                <input matInput placeholder=\"First Name\" formControlName=\"firstName\">\n              </mat-form-field>\n\n              <mat-form-field>\n                <mat-label>Last Name</mat-label>\n                <input matInput placeholder=\"Last Name\" formControlName=\"lastName\">\n              </mat-form-field>\n\n              <mat-radio-group style=\"margin:20px 0px\" aria-label=\"Select an option\" formControlName=\"gender\">\n                <mat-radio-button value=\"1\">Male</mat-radio-button>\n                <mat-radio-button style=\"margin-left:40px\" value=\"2\">Female</mat-radio-button>\n              </mat-radio-group>\n\n              <mat-form-field  style=\"width: 30%;\">\n                <mat-label>Date Of Birth</mat-label>\n                <input matInput [matDatepicker]=\"picker\" formControlName=\"dateOfBirth\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field>   \n              \n\n            <button style=\"margin:20px 0px;\" mat-raised-button type=\"submit\">Register</button>\n\n            <h3 class=\"errorMsg\" *ngIf=\"errorMsg!='null'\">{{errorMsg}}</h3>\n          </form>\n    </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-side-bar-user-details',\n  templateUrl: './side-bar-user-details.component.html',\n  styleUrls: ['./side-bar-user-details.component.css']\n})\nexport class SideBarUserDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img id=\"UserImage\" src=\"..\\..\\..\\assets\\Images\\stejin.jpg\" alt=\"User Image\">\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>settings works!</p>\n","<!-- <div class=\"d-flex flex-row bd-highlight mb-3\" style=\"margin: 30px;\"> -->\r\n\r\n<div class=\"container\" style=\"margin-top: 20px;\">\r\n    <div class=\"row\">\r\n        <!-- <div class=\"col-md-3\">\r\n            <a routerLink=\"addImage\">\r\n                <div fxLayoutAlign=\"center center\" style=\"width: 300px; height: 300px; border: 2px dotted black;\">\r\n                    <mat-icon>add_circle</mat-icon>\r\n                </div>\r\n            </a>\r\n        </div> -->\r\n        <div style=\"margin-top: 20px;\" class=\"col-lg-3 col-md-4 col-sm-6\" *ngFor=\"let test of allImages\">\r\n            <img title=\"{{test.description}}\" class=\"img-thumbnail img-fluid image-size\"\r\n                src=\"data:image/jpg;base64,{{test.image}}\" />\r\n        </div>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"pageLoading\" class=\"spinner\"></div>\r\n<a routerLink=\"addImage\">\r\n    <mat-icon id=\"fixedbutton\">add_a_photo</mat-icon>\r\n</a>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthServiceService } from '../auth-service.service';\r\nimport { IImageContent } from '../IImageContent';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  allImages: IImageContent[];\r\n  pageLoading = false;\r\n  iconVisible = true;\r\n  constructor(private authService: AuthServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.pageLoading = true;\r\n    this.authService.getAllImages().subscribe(result => {\r\n      this.pageLoading = false;\r\n      if(result != null){\r\n        this.allImages = result;\r\n        console.log(this.allImages);\r\n      }\r\n      else\r\n        this.allImages = [];\r\n    },\r\n    error => {\r\n      this.pageLoading = false;\r\n      console.log(\"Error occoured\" + error);\r\n    })\r\n  }\r\n  mouseEnter(){\r\n    this.iconVisible = true;\r\n  }\r\n\r\n  mouseLeave(){\r\n    this.iconVisible = false;\r\n  }\r\n\r\n}\r\n","import { HttpInterceptor } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthServiceService } from './auth-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor{\n\n  constructor(private authService: AuthServiceService) { }\n\n  intercept(req : any, next : any){\n    let tokenizedReq = req.clone({\n      setHeaders:{\n        Authorization: `Bearer ${this.authService.getToken()}`\n      }\n    })\n    return next.handle(tokenizedReq);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\nexport const baseUrl = \"http://35.200.156.69/imagegalleryapi/\";\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthServiceService } from '../auth-service.service';\r\n\r\n@Component({\r\n  selector: 'app-add-image',\r\n  templateUrl: './add-image.component.html',\r\n  styleUrls: ['./add-image.component.css']\r\n})\r\nexport class AddImageComponent implements OnInit {\r\n  imageFormGroup : FormGroup;\r\n  errorMsg: string = \"null\";\r\n  pageLoading = false;\r\n\r\n  constructor(private authService: AuthServiceService, private routerService:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  uploadImage(){\r\n    this.pageLoading = true;\r\n    if(this.imageFormGroup.valid){\r\n      const formBody= this.imageFormGroup.value;\r\n      const formData = new FormData();\r\n\r\n      formData.set('image', formBody.image);\r\n      formData.set('description', formBody.description);\r\n      \r\n      this.authService.addImage(formData).subscribe(result => {\r\n        console.log(result);\r\n        this.pageLoading = false;\r\n        this.routerService.navigate(['home']);\r\n      },\r\n      error=>{\r\n        this.pageLoading = false;\r\n        this.errorMsg = \"Upload failed\";\r\n      })\r\n    }\r\n  }\r\n\r\n  initForm(){\r\n    this.imageFormGroup = new FormGroup({\r\n      image : new FormControl('', [Validators.required]),\r\n      description: new FormControl('')\r\n    });\r\n  }\r\n\r\n  onFileSelect(event : Event){\r\n    const target = event.target as HTMLInputElement;\r\n    const files = target.files as FileList;\r\n    if(files.length > 0)\r\n      this.imageFormGroup.get('image')?.setValue(files[0]);\r\n    else\r\n      this.errorMsg = \"Invalid file selected\";\r\n  }\r\n\r\n}\r\n","<div fxLayoutAlign=\"center center\" fxFlexFill class=\"div-toolbar\">\r\n    <mat-card fxFlex=\"40\">\r\n        <mat-toolbar  color=\"primary\">\r\n            <span>Add Image</span>\r\n          </mat-toolbar>\r\n        <form fxLayoutAlign=\"stretch\" fxLayout=\"column\" class=\"login-form\" [formGroup]=\"imageFormGroup\" (ngSubmit)=\"uploadImage()\">\r\n\r\n          <input style=\"margin:20px 0px;\" type=\"file\" class=\"form-control\" id=\"customFile\" (change)=\"onFileSelect($event)\"/>\r\n\r\n            <mat-form-field>\r\n                <mat-label>Description</mat-label>\r\n                <input type=\"\" matInput placeholder=\"Description\" formControlName=\"description\">\r\n            </mat-form-field>\r\n              \r\n\r\n            <button style=\"margin:20px 0px;\" mat-raised-button type=\"submit\">Upload</button>\r\n            <a routerLink=\"/home\" mat-raised-button type=\"button\">Cancel</a>\r\n\r\n            <h3 class=\"errorMsg\" *ngIf=\"errorMsg!='null'\">{{errorMsg}}</h3>\r\n          </form>\r\n    </mat-card>\r\n</div>\r\n\r\n<div *ngIf=\"pageLoading\" class=\"spinner\"></div>\r\n","import { HttpClient,HttpClientModule } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { baseUrl } from 'src/environments/environment';\nimport { IImageContent } from './IImageContent';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n\n  constructor(private http:HttpClient) {\n    \n   }\n   \n    login(data:any):Observable<any>{\n      return this.http.post(`${baseUrl}accounts/api/login`, data);\n    }\n\n    register(data:any):Observable<any>{\n      return this.http.post(`${baseUrl}accounts/api/register`, data);\n    }\n\n    getAllImages():Observable<IImageContent[]>{\n      return this.http.get<IImageContent[]>(`${baseUrl}home/api/image`);\n    }\n\n    addImage(data:FormData):Observable<any>{\n      return this.http.post(`${baseUrl}home/api/upload`,data);\n    }\n\n    getToken(){\n      return localStorage.getItem('token');\n    }\n\n    isLoggedIn(){\n      return !!localStorage.getItem('token');\n    }\n\n    Logout(){\n      localStorage.removeItem('token');\n    }\n\n}\n","<div>\n  <!-- <mat-toolbar role=\"heading\" color=\"primary\">\n    <span>Image Gallery</span>\n    <a class=\"right\" [routerLink]=\"['/login']\">Login</a>\n  </mat-toolbar> -->\n  <div class=\"topnav\">\n    <div>\n      <a>Image Gallery</a>\n    </div>\n    <div class=\"topnav-right\">\n      <a routerLink=\"/login\" routerLinkActive=\"active\" *ngIf=\"!authService.isLoggedIn()\">Login</a>\n      <a routerLink=\"/register\" *ngIf=\"!authService.isLoggedIn()\" routerLinkActive=\"active\">Register</a>\n      <a routerLink=\"/settings\" *ngIf=\"authService.isLoggedIn()\" routerLinkActive=\"active\">Settings</a>\n      <a routerLink=\"/login\" *ngIf=\"authService.isLoggedIn()\" (click)=\"authService.Logout()\" routerLinkActive=\"active\"><span class=\"material-icons-outlined\">\n        logout\n        </span></a>\n    </div>\n  </div>\n  <router-outlet></router-outlet>\n</div>","import { Component } from '@angular/core';\nimport { AuthServiceService } from './auth-service.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'PhotoAppUI';\n\n  constructor(public authService: AuthServiceService) {\n  }\n}\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './login/login.component';\r\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { TokenInterceptorService } from './token-interceptor.service';\r\nimport { AuthServiceService } from './auth-service.service';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AddImageComponent } from './add-image/add-image.component';\r\nimport { SideBarUserDetailsComponent } from './home/side-bar-user-details/side-bar-user-details.component';\nimport { SettingsComponent } from './settings/settings.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    AddImageComponent,\r\n    SideBarUserDetailsComponent,\r\n    SettingsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,FlexLayoutModule,MatFormFieldModule,MatInputModule,MatButtonModule,MatCardModule,\r\n    MatToolbarModule,HttpClientModule,FormsModule,ReactiveFormsModule,MatGridListModule,MatIconModule,\r\n    MatDatepickerModule,MatNativeDateModule,MatRadioModule,MatProgressSpinnerModule\r\n  ],\r\n  providers: [AuthServiceService,\r\n  {\r\n    provide:HTTP_INTERCEPTORS,\r\n    useClass:TokenInterceptorService,\r\n    multi:true\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddImageComponent } from './add-image/add-image.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'home', component: HomeComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'home/addImage', component: AddImageComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\r\nimport { Router } from '@angular/router';\r\nimport { AuthServiceService } from '../auth-service.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  formGroup: FormGroup;\r\n  errorMsg: string = 'null';\r\n  pageLoading = false;\r\n  @Output() notify: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(private authService : AuthServiceService, private routerService: Router) { }\r\n\r\n  loginProcess(){\r\n    if(this.formGroup.valid){\r\n      this.pageLoading = true;\r\n      this.formGroup.disable();\r\n      this.authService.login(this.formGroup.value).subscribe(result=>{\r\n        if(result.token){\r\n          this.formGroup.enable();\r\n          this.pageLoading = false;\r\n          console.log(result);\r\n          this.errorMsg = 'null';\r\n          localStorage.setItem('token', result.token);\r\n          this.routerService.navigate(['home']);\r\n        }\r\n      }, error => {\r\n        this.formGroup.enable();\r\n        this.pageLoading = false;\r\n        console.log(\"error:\" + error);\r\n        this.errorMsg = \"Login failed\";\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n  initForm(){\r\n    this.formGroup = new FormGroup({\r\n      username:new FormControl('',[Validators.required,Validators.email]),\r\n      password:new FormControl('',[Validators.required])\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<div fxLayoutAlign=\"center center\" fxFlexFill class=\"div-toolbar\">\r\n    <mat-card fxFlex=\"30\">\r\n        <mat-toolbar  color=\"primary\">\r\n            <span>Login</span>\r\n          </mat-toolbar>\r\n        <form fxLayoutAlign=\"stretch\" fxLayout=\"column\" class=\"login-form\" [formGroup]=\"formGroup\" (ngSubmit)=\"loginProcess()\">\r\n            <mat-form-field>\r\n              <mat-label>Username</mat-label>\r\n              <input matInput placeholder=\"Username\" formControlName=\"username\">\r\n            </mat-form-field>\r\n          \r\n            <mat-form-field>\r\n                <mat-label>Password</mat-label>\r\n                <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\"> \r\n            </mat-form-field>\r\n            <button mat-raised-button type=\"submit\">Login</button>\r\n          </form>\r\n          <h3 class=\"errorMsg\" *ngIf=\"errorMsg!='null'\">{{errorMsg}}</h3>\r\n    </mat-card>\r\n</div>\r\n\r\n<div *ngIf=\"pageLoading\" class=\"spinner\"></div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}